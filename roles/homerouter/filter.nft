table inet global {
#  flowtable f {
#    hook ingress priority 0;
#    devices = { internet, internal, lab, untrustedap }
#  }

  chain ensure_ip6_hop_255 {
    ip6 hoplimit 255 accept
    drop
  }
  
  chain ensure_ipv6_link_local_source {
    ip6 saddr fe80::/64 accept
    drop
  }

  # rfc4890
  chain icmpv6_compliance_forwarding {
    icmpv6 type { \
      destination-unreachable, \
      packet-too-big, \
      time-exceeded, \
      parameter-problem, \
      echo-request, \
      echo-reply \
    } accept
    drop
  }

  chain icmpv6_compliance_local {
  # TODO: Add nd inverse, SEND cert path, router discovery
    icmpv6 type { \
      destination-unreachable, \
      packet-too-big, \
      time-exceeded, \
      parameter-problem, \
      echo-request, \
      echo-reply, \
      nd-router-solicit, \
      nd-router-advert, \
      nd-neighbor-solicit, \
      nd-neighbor-advert, \
      mld-listener-query, \
      mld-listener-report, \
      mld-listener-reduction, \
      mld2-listener-report \
    } accept
    drop
  }

  chain inbound_internet {
    # drop any opportunistic DNS resolution from the outside - TODO should not be two rules
    # TODO not stopping external queriers
    udp dport 53 drop
    tcp dport 53 drop

    # allow SSH
    tcp dport 22 accept

    udp dport 546 accept
    udp dport 68 accept

    # otherwise, ignore
  }

  chain inbound_private {
    # allow DHCP on v4
    meta nfproto ipv4 udp dport 67 accept

    # allow SSH
    tcp dport 22 accept

    # allow dns
    udp dport 53 accept
    tcp dport 53 accept

    # all else gets dropped inbound
  }

  chain inbound_isolate {
    # we only allow DHCP to ourselves locally
    meta nfproto ipv4 udp dport 67 accept

    # otherwise, drop anything coming to us. should have gone to the forward chain
  }

  chain inbound {
    type filter hook input priority 0; policy accept;

    # follow icmpv6 compliance
    #meta l4proto icmpv6 goto icmpv6_compliance_local
    meta l4proto icmpv6 accept

    # Allow traffic from established & related packets, drop invalid
    ct state vmap { established : accept, related : accept, invalid : drop }

    # Defer further eval to other inbound chains
    iifname vmap { \
      lo : accept, \
      internet : jump inbound_internet, \
      internal : jump inbound_private, \
      lab : jump inbound_private, \
      untrustedap : jump inbound_isolate \
      iot : jump inbound_isolate \
    } accept

    # Everything else is dropped
  }

  chain forward {
    type filter hook forward priority 0; policy drop;

    # follow icmpv6 guidance
    meta l4proto icmpv6 goto icmpv6_compliance_forwarding

    # Allow traffic from established & related packets, drop invalid
    ct state vmap { established : accept, related : accept, invalid : drop }

    # Allow anyone internally to be forwarded wherever
    iifname { internal, lab } \
#      flow add @f \
      accept

    # lhAH can route out, but not anywhere inside
    iifname untrustedap oifname internet \
#      flow add @f \
      accept

    iifname { untrustedap, iot } drop
  
    # all else gets dropped. shouldn't be soliciting 
  }

  chain postrouting {
    type nat hook postrouting priority 100; policy accept;

    # masquerade anything heading out of ipv4
    meta nfproto ipv4 meta oifname internet masquerade
  }
}
